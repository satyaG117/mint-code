const { register, handleSubmit, control, formState: { errors } } = useForm();

const { fields: testcases, append: appendTestcase, remove: removeTestcase } = useFieldArray({
        control,
        name: 'testcases',
    });

    const addTestcase = (e) => {
        e.preventDefault();
        appendTestcase({
            input: '',
            expected_output: ''
        })
    }

    const deleteTestcase = (e) => {
        e.preventDefault();
        removeTestcase(e.target.getAttribute('data-id'))
    }




            <div className='my-5'>
                <h3>Testcases</h3>
                {testcases.map((testcase, index) => {
                    return (<div key={testcase.id} className='mb-3'>
                        <label className='form-label'>Testcase # {index + 1} </label> <button className='btn btn-danger mx-2' data-id={index} onClick={deleteTestcase}>Delete</button>
                        <div>
                            <label className='form-label'>Input *</label>
                            <TextArea
                                name={`testcases.${index}.input`}
                                placeholder={""}
                                register={register}
                                rules={{
                                    required: 'Field cannot be empty'
                                }}
                                rows={3}
                                cols={10}
                                error={errors.testcases?.[index]?.input}
                            />

                        </div>
                        <div>
                            <label className='form-label'>Expected Output *</label>
                            <TextArea
                                name={`testcases.${index}.expected_output`}
                                placeholder={""}
                                register={register}
                                rules={{
                                    required: 'Field cannot be empty'
                                }}
                                rows={3}
                                cols={10}
                                error={errors.testcases?.[index]?.expected_output}
                            />

                        </div>
                        <div className="form-check form-switch my-1">
                            <label className="form-check-label" for={`testcases.${index}.public`}>Set to public ? </label>
                            <CheckBox register={register} name={`testcases.${index}.public`} />
                        </div>
                        <hr />
                    </div>)
                })}
                <div>
                    <button className='btn btn-info' onClick={addTestcase}>Add testcase</button>
                </div>
            </div>
